apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "am-market-data.fullname" . }}-config
  labels:
    {{- include "am-market-data.labels" . | nindent 4 }}
data:
  # Spring Profile
  SPRING_PROFILES_ACTIVE: "{{ .Values.environment }}"
  TZ: "Asia/Kolkata"

  # Database Configuration
  POSTGRES_URL: "jdbc:postgresql://{{ .Values.postgresql.fullname }}:{{ .Values.postgresql.primary.service.port }}"
  POSTGRES_DATABASE: "{{ .Values.postgresql.auth.database }}"
  # Vault Secret Paths for PostgreSQL
  POSTGRES_SECRET_PATH: "{{ .Values.vault.secretPaths.postgres }}"


  # MongoDB Configuration
  # Using environment variables injected by Vault Agent
  MONGODB_URL: "${MONGODB_URL}"
  MONGODB_DATABASE: "${MONGODB_DATABASE}"
  MONGODB_USERNAME: "${MONGODB_USERNAME}"
  MONGODB_PASSWORD: "${MONGODB_PASSWORD}"

  # Redis Configuration
  # Using environment variables injected by Vault Agent
  REDIS_URL: "${REDIS_URL}"
  REDIS_PORT: "${REDIS_PORT}"

  # InfluxDB Configuration
  # Using environment variables injected by Vault Agent
  # These will be overridden by the environment variables injected by Vault Agent
  INFLUXDB_TOKEN: "${INFLUXDB_TOKEN}"
  INFLUXDB_URL: "${INFLUXDB_URL}"
  INFLUXDB_ORG: "${INFLUXDB_ORG}"
  INFLUXDB_BUCKET: "${INFLUXDB_BUCKET}"

  # Kafka Configuration
  KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS}"
  KAFKA_ZOOKEEPER_CONNECT: "${KAFKA_ZOOKEEPER_CONNECT}"
  KAFKA_CONSUMER_GROUP_ID: "${KAFKA_CONSUMER_GROUP_ID}"
  KAFKA_CONSUMER_AUTO_OFFSET_RESET: "${KAFKA_CONSUMER_AUTO_OFFSET_RESET}"
  KAFKA_TOPICS_STOCK_PRICE: "${KAFKA_TOPICS_STOCK_PRICE}"
  KAFKA_TOPICS_NSE_INDICES: "${KAFKA_TOPICS_NSE_INDICES}"
  KAFKA_TOPICS_NSE_ETF: "${KAFKA_TOPICS_NSE_ETF}"

  # Market Data Configuration
  MARKET_DATA_MAX_RETRIES: "{{ .Values.config.marketData.maxRetries }}"
  MARKET_DATA_RETRY_DELAY_MS: "{{ .Values.config.marketData.retryDelayMs }}"
  MARKET_DATA_THREAD_POOL_SIZE: "{{ .Values.config.marketData.threadPoolSize }}"
  MARKET_DATA_THREAD_QUEUE_CAPACITY: "{{ .Values.config.marketData.threadQueueCapacity }}"
  MARKET_DATA_MAX_AGE_MINUTES: "{{ .Values.config.marketData.maxAgeMinutes }}"

  # Upstox Configuration
  UPSTOCK_API_BASE_URL: "${UPSTOCK_API_BASE_URL}"
  UPSTOCK_REDIRECT_URI: "${UPSTOCK_REDIRECT_URI}"
  UPSTOCK_ACCESS_TOKEN: "${UPSTOCK_ACCESS_TOKEN}"
  UPSTOCK_CODE: "${UPSTOCK_CODE}"

  # Metrics Configuration
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,metrics,prometheus"
  MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: "always"
  MANAGEMENT_METRICS_TAGS_APPLICATION: "market-data-{{ .Values.environment }}"
  MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "{{ .Values.monitoring.prometheus.scrape }}"
