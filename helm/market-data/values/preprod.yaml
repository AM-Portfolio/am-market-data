# Pre-production Environment Configuration
environment: preprod

# Application Configuration
config:
  marketData:
    maxRetries: 3
    retryDelayMs: 1000
    threadPoolSize: 5
    threadQueueCapacity: 10
    maxAgeMinutes: 15

# Pod Configuration
replicaCount: 2
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8084"
  prometheus.io/path: "/actuator/prometheus"

# Service Configuration
service:
  type: ClusterIP
  port: 8084

# Resource Configuration
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Infrastructure Configuration
postgresql:
  enabled: true
  fullname: am-preprod-postgresql
  auth:
    database: portfolio
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  primary:
    service:
      port: 5432
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi

influxdb:
  enabled: true
  url: http://am-preprod-influxdb:8086
  auth:
    token: ${INFLUXDB_TOKEN}
    org: ${INFLUXDB_ORG}
    bucket: ${INFLUXDB_BUCKET}

kafka:
  enabled: true
  bootstrapServers: am-preprod-kafka:9092
  zookeeper:
    connect: am-preprod-zookeeper:2181
  config:
    consumerGroupId: am-market-data-service-preprod
    autoOffsetReset: earliest
    topics:
      stockPrice: am-stock-price-update-preprod
      nseIndices: nse-indices-update-preprod
      nseEtf: nse-etf-update-preprod
    replicationFactor: 2
    numPartitions: 3

# Upstox Configuration
upstox:
  enabled: true
  auth:
    baseUrl: https://api.upstox.com/v2
    redirectUri: https://preprod.marketdata.aminvestment.com

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
  hosts:
    - host: preprod.marketdata.aminvestment.com
      paths:
        - path: /
          pathType: Prefix

# Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    scrape: true
    port: "8084"
    path: "/actuator/prometheus"

# RBAC Configuration
rbac:
  enabled: true
  rules:
    - apiGroups: [""]
      resources: ["secrets", "configmaps"]
      verbs: ["get", "list", "watch"]

# Service Account
serviceAccount:
  create: true
  annotations:
    azure.workload.identity/client-id: "market-data-preprod"
