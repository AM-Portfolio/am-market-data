# Pre-production Environment Configuration
environment: am-preprod

# Kubernetes Cluster Configuration
kubernetes:
  cluster:
    name: docker-desktop
    region: eastus
    resourceGroup: am-rg-preprod
  namespace:
    name: am-preprod
    labels:
      environment: preprod
      app: market-data
      team: investment
    annotations:
      description: "Market Data Service Pre-production Environment"

# Pod Configuration
replicaCount: 1
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8084"
  prometheus.io/path: "/actuator/prometheus"

# Node Selection
nodeSelector:
  purpose: app
  environment: preprod

# Pod Affinity/Anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - market-data
        topologyKey: kubernetes.io/hostname

# Pod Tolerations
tolerations:
- key: "purpose"
  operator: "Equal"
  value: "app"
  effect: "NoSchedule"

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Autoscaling Configuration
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Vault Configuration
vault:
  enabled: true
  path: am-preprod/market-data
  secretPaths:
    github: am-preprod/github
    githubToken: am-preprod/github-token
    database: am-preprod/database
    upstox: am-preprod/upstox
    influxdb: am-preprod/influxdb

# Application Configuration
config:
  marketData:
    maxRetries: 3
    retryDelayMs: 1000
    threadPoolSize: 5
    threadQueueCapacity: 10
    maxAgeMinutes: 15

# Service Configuration
service:
  type: ClusterIP
  port: 8084

# Resource Configuration
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Infrastructure Configuration
postgresql:
  fullname: host.docker.internal
  enabled: true
  auth:
    database: portfolio
    username: postgres
    password: password
  primary:
    service:
      port: 5456
  resources:
    limits:
      cpu: 500m
      memory: 512Mi

influxdb:
  enabled: true
  service:
    port: 8087
  auth:
    org: am_investment
    bucket: market_data
    retention: 15d

kafka:
  enabled: true
  service:
    port: 9093
  zookeeper:
    service:
      port: 2182
  config:
    numPartitions: 3
    replicationFactor: 2
    logRetentionHours: 24

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
  hosts:
    - host: preprod-market-data.am.investment.com
      paths:
        - path: /
          pathType: Prefix

# Network Policies
networkPolicies:
  enabled: true
  ingressRules:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app: nginx-ingress
      ports:
        - protocol: TCP
          port: 8084
  egressRules:
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: TCP
          port: 53

# RBAC Configuration
rbac:
  enabled: true
  rules:
    - apiGroups: [""]
      resources: ["secrets", "configmaps"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments"]
      verbs: ["get", "list", "watch", "update"]

# Service Account
serviceAccount:
  create: true
  annotations:
    azure.workload.identity/client-id: "market-data-preprod"
  rules:
    - apiGroups: [""]
      resources: ["pods", "services"]
      verbs: ["get", "list", "watch"]
