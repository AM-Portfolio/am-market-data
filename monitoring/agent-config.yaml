# Grafana Agent Configuration for Grafana Cloud
# Reference: https://grafana.com/docs/agent/latest/configuration/

server:
  log_level: info

# Metrics collection configuration
metrics:
  global:
    scrape_interval: 5s
    remote_write:
      - url: ${GRAFANA_CLOUD_REMOTE_WRITE_ENDPOINT}
        basic_auth:
          username: ${GRAFANA_CLOUD_METRICS_USERNAME}
          password: ${GRAFANA_CLOUD_API_KEY}
    external_labels:
      environment: ${ENVIRONMENT:-production}
      service: market-data-service

  # Spring Boot application metrics
  configs:
    - name: market-data-metrics
      scrape_configs:
        - job_name: market-data-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['market-data-service:8080']
              labels:
                application: market-data-service

        # JVM metrics
        - job_name: jvm-metrics
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['market-data-service:8080']
              labels:
                component: jvm

# Logs collection configuration
logs:
  configs:
    - name: market-data-logs
      clients:
        - url: ${GRAFANA_CLOUD_LOGS_URL}
          basic_auth:
            username: ${GRAFANA_CLOUD_LOGS_USERNAME}
            password: ${GRAFANA_CLOUD_API_KEY}
          external_labels:
            environment: ${ENVIRONMENT:-production}
            service: market-data-service
      positions:
        filename: /tmp/positions.yaml
      target_config:
        sync_period: 5s
      scrape_configs:
        - job_name: market-data-logs
          static_configs:
            - targets:
                - localhost
              labels:
                job: market-data-logs
                __path__: /var/log/market-data/*.log

# Traces collection configuration
traces:
  configs:
    - name: market-data-traces
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
      remote_write:
        - endpoint: ${GRAFANA_CLOUD_TRACES_ENDPOINT}
          basic_auth:
            username: ${GRAFANA_CLOUD_TRACES_USERNAME}
            password: ${GRAFANA_CLOUD_API_KEY}
      batch:
        timeout: 5s
        send_batch_size: 100

# Integrations for additional metrics collection
integrations:
  # System metrics (CPU, memory, disk, network)
  node_exporter:
    enabled: true
    include_exporter_metrics: true
    
  # Docker metrics if running in Docker
  docker:
    enabled: ${DOCKER_METRICS_ENABLED:-false}
    
  # JVM metrics for Java applications
  java:
    enabled: true
    target: market-data-service:8080
    collection_interval: 5s
